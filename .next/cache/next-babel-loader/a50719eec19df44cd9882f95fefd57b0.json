{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getPostsApi, getCurrentPostApi } from '../api';\nimport { actionTypes } from '../types';\nvar GET_POSTS_INIT = actionTypes.GET_POSTS_INIT,\n    GET_POSTS_SUCCESS = actionTypes.GET_POSTS_SUCCESS,\n    GET_POSTS_FAILURE = actionTypes.GET_POSTS_FAILURE,\n    GET_CURRENT_POST_INIT = actionTypes.GET_CURRENT_POST_INIT,\n    GET_CURRENT_POST_SUCCESS = actionTypes.GET_CURRENT_POST_SUCCESS,\n    GET_CURRENT_POST_FAILURE = actionTypes.GET_CURRENT_POST_FAILURE,\n    CREATE_POST_INIT = actionTypes.CREATE_POST_INIT,\n    CREATE_POST_SUCCESS = actionTypes.CREATE_POST_SUCCESS,\n    CREATE_POST_FAILURE = actionTypes.CREATE_POST_FAILURE,\n    CLEAR_STORE = actionTypes.CLEAR_STORE;\nexport var getPosts = function getPosts(params) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_POSTS_INIT\n    });\n    getPostsApi(params).then(function (response) {\n      dispatch({\n        type: GET_POSTS_SUCCESS,\n        payload: _objectSpread({}, response)\n      });\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: GET_POSTS_FAILURE,\n        payload: _objectSpread({}, error)\n      });\n    });\n  };\n};\nexport var getCurrentPost = function getCurrentPost(id) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_CURRENT_POST_INIT\n    });\n    getCurrentPostApi(id).then(function (response) {\n      dispatch({\n        type: GET_CURRENT_POST_SUCCESS,\n        payload: _objectSpread({}, response)\n      });\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: GET_CURRENT_POST_FAILURE,\n        payload: _objectSpread({}, error)\n      });\n    });\n  };\n};\nexport var clearStore = function clearStore() {\n  return {\n    type: CLEAR_STORE\n  };\n};","map":{"version":3,"sources":["/Users/pecherkiy/Documents/DevelopsToday/store/actions/postsActions.js"],"names":["getPostsApi","getCurrentPostApi","actionTypes","GET_POSTS_INIT","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","GET_CURRENT_POST_INIT","GET_CURRENT_POST_SUCCESS","GET_CURRENT_POST_FAILURE","CREATE_POST_INIT","CREATE_POST_SUCCESS","CREATE_POST_FAILURE","CLEAR_STORE","getPosts","params","dispatch","type","then","response","payload","error","getCurrentPost","id","clearStore"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,iBAAtB,QAA+C,QAA/C;AACA,SAASC,WAAT,QAA4B,UAA5B;IAGIC,c,GAUAD,W,CAVAC,c;IACAC,iB,GASAF,W,CATAE,iB;IACAC,iB,GAQAH,W,CARAG,iB;IACAC,qB,GAOAJ,W,CAPAI,qB;IACAC,wB,GAMAL,W,CANAK,wB;IACAC,wB,GAKAN,W,CALAM,wB;IACAC,gB,GAIAP,W,CAJAO,gB;IACAC,mB,GAGAR,W,CAHAQ,mB;IACAC,mB,GAEAT,W,CAFAS,mB;IACAC,W,GACAV,W,CADAU,W;AAGJ,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAc;AAC9CA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGAH,IAAAA,WAAW,CAACc,MAAD,CAAX,CACKG,IADL,CACU,UAACC,QAAD,EAAc;AAChBH,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEZ,iBADD;AAELe,QAAAA,OAAO,oBAAOD,QAAP;AAFF,OAAD,CAAR;AAIH,KANL,WAOW,UAACE,KAAD,EAAW;AACdL,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEX,iBADD;AAELc,QAAAA,OAAO,oBAAOC,KAAP;AAFF,OAAD,CAAR;AAIH,KAZL;AAaH,GAjBuB;AAAA,CAAjB;AAmBP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD;AAAA,SAAQ,UAACP,QAAD,EAAc;AAChDA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGAL,IAAAA,iBAAiB,CAACqB,EAAD,CAAjB,CACKL,IADL,CACU,UAACC,QAAD,EAAc;AAChBH,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAET,wBADD;AAELY,QAAAA,OAAO,oBAAOD,QAAP;AAFF,OAAD,CAAR;AAIH,KANL,WAOW,UAACE,KAAD,EAAW;AACdL,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAER,wBADD;AAELW,QAAAA,OAAO,oBAAOC,KAAP;AAFF,OAAD,CAAR;AAIH,KAZL;AAaH,GAjB6B;AAAA,CAAvB;AAmBP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAO;AAC7BP,IAAAA,IAAI,EAAEJ;AADuB,GAAP;AAAA,CAAnB","sourcesContent":["import { getPostsApi, getCurrentPostApi } from '../api';\nimport { actionTypes } from '../types';\n\nconst {\n    GET_POSTS_INIT,\n    GET_POSTS_SUCCESS,\n    GET_POSTS_FAILURE,\n    GET_CURRENT_POST_INIT,\n    GET_CURRENT_POST_SUCCESS,\n    GET_CURRENT_POST_FAILURE,\n    CREATE_POST_INIT,\n    CREATE_POST_SUCCESS,\n    CREATE_POST_FAILURE,\n    CLEAR_STORE,\n} = actionTypes;\n\nexport const getPosts = (params) => (dispatch) => {\n    dispatch({\n        type: GET_POSTS_INIT,\n    });\n    getPostsApi(params)\n        .then((response) => {\n            dispatch({\n                type: GET_POSTS_SUCCESS,\n                payload: { ...response },\n            });\n        })\n        .catch((error) => {\n            dispatch({\n                type: GET_POSTS_FAILURE,\n                payload: { ...error },\n            });\n        });\n};\n\nexport const getCurrentPost = (id) => (dispatch) => {\n    dispatch({\n        type: GET_CURRENT_POST_INIT,\n    });\n    getCurrentPostApi(id)\n        .then((response) => {\n            dispatch({\n                type: GET_CURRENT_POST_SUCCESS,\n                payload: { ...response },\n            });\n        })\n        .catch((error) => {\n            dispatch({\n                type: GET_CURRENT_POST_FAILURE,\n                payload: { ...error },\n            });\n        });\n};\n\nexport const clearStore = () => ({\n    type: CLEAR_STORE,\n});\n"]},"metadata":{},"sourceType":"module"}