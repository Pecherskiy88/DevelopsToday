{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getPostsApi } from '../api';\nimport { actionTypes } from '../types';\nvar GET_POSTS_INIT = actionTypes.GET_POSTS_INIT,\n    GET_POSTS_SUCCESS = actionTypes.GET_POSTS_SUCCESS,\n    GET_POSTS_FAILURE = actionTypes.GET_POSTS_FAILURE,\n    CLEAR_STORES = actionTypes.CLEAR_STORES;\nexport var getPosts = function getPosts(params) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_POSTS_INIT\n    });\n    getPostsApi(params).then(function (response) {\n      dispatch({\n        type: GET_POSTS_SUCCESS,\n        payload: _objectSpread({}, response)\n      });\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: GET_POSTS_FAILURE,\n        payload: _objectSpread({}, error)\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/pecherkiy/Documents/DevelopsToday/store/actions/postsActions.js"],"names":["getPostsApi","actionTypes","GET_POSTS_INIT","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","CLEAR_STORES","getPosts","params","dispatch","type","then","response","payload","error"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,QAA5B;AACA,SAASC,WAAT,QAA4B,UAA5B;IAEQC,c,GAAuED,W,CAAvEC,c;IAAgBC,iB,GAAuDF,W,CAAvDE,iB;IAAmBC,iB,GAAoCH,W,CAApCG,iB;IAAmBC,Y,GAAiBJ,W,CAAjBI,Y;AAE9D,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAc;AAC9CA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGAF,IAAAA,WAAW,CAACO,MAAD,CAAX,CACKG,IADL,CACU,UAACC,QAAD,EAAc;AAChBH,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN,iBADD;AAELS,QAAAA,OAAO,oBAAOD,QAAP;AAFF,OAAD,CAAR;AAIH,KANL,WAOW,UAACE,KAAD,EAAW;AACdL,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,iBADD;AAELQ,QAAAA,OAAO,oBAAOC,KAAP;AAFF,OAAD,CAAR;AAIH,KAZL;AAaH,GAjBuB;AAAA,CAAjB","sourcesContent":["import { getPostsApi } from '../api';\nimport { actionTypes } from '../types';\n\nconst { GET_POSTS_INIT, GET_POSTS_SUCCESS, GET_POSTS_FAILURE, CLEAR_STORES } = actionTypes;\n\nexport const getPosts = (params) => (dispatch) => {\n    dispatch({\n        type: GET_POSTS_INIT,\n    });\n    getPostsApi(params)\n        .then((response) => {\n            dispatch({\n                type: GET_POSTS_SUCCESS,\n                payload: { ...response },\n            });\n        })\n        .catch((error) => {\n            dispatch({\n                type: GET_POSTS_FAILURE,\n                payload: { ...error },\n            });\n        });\n};\n"]},"metadata":{},"sourceType":"module"}