{"ast":null,"code":"var _jsxFileName = \"/Users/pecherkiy/Documents/DevelopsToday/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { getPosts, clearStore } from '../store/actions/postsActions';\nimport { postListDataSelector, createPostSelector } from '../store/selectors';\nimport Header from '../components/Common/Header';\nimport Button from '../components/Common/Button';\nimport PostsList from '../components/MainPage/PostsList';\n\nconst IndexPage = () => {\n  const dispatch = useDispatch();\n  const postListData = useSelector(state => postListDataSelector(state));\n  const createPostData = useSelector(state => createPostSelector(state));\n  const {\n    sent\n  } = createPostData;\n  console.log('sent: ', sent);\n  useEffect(() => {\n    dispatch(getPosts());\n    return () => dispatch(clearStore());\n  }, [sent]);\n  const {\n    data\n  } = postListData; // Сортируем, новые посты в начале списка\n\n  const sortedData = data.length > 0 ? data.sort((a, b) => {\n    if (a.id > b.id) {\n      return -1;\n    }\n  }) : data;\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), __jsx(StyleDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/posts/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Write post\")))), __jsx(PostsList, {\n    postsArray: sortedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default IndexPage;\nconst StyleDiv = styled.div`\n    text-align: end;\n`;","map":{"version":3,"sources":["/Users/pecherkiy/Documents/DevelopsToday/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","Link","styled","getPosts","clearStore","postListDataSelector","createPostSelector","Header","Button","PostsList","IndexPage","dispatch","postListData","state","createPostData","sent","console","log","data","sortedData","length","sort","a","b","id","StyleDiv","div"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,+BAArC;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,oBAAzD;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,YAAY,GAAGZ,WAAW,CAAEa,KAAD,IAAWR,oBAAoB,CAACQ,KAAD,CAAhC,CAAhC;AACA,QAAMC,cAAc,GAAGd,WAAW,CAAEa,KAAD,IAAWP,kBAAkB,CAACO,KAAD,CAA9B,CAAlC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWD,cAAjB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACR,QAAQ,EAAT,CAAR;AACA,WAAO,MAAMQ,QAAQ,CAACP,UAAU,EAAX,CAArB;AACH,GAHQ,EAGN,CAACW,IAAD,CAHM,CAAT;AAKA,QAAM;AAAEG,IAAAA;AAAF,MAAWN,YAAjB,CAZoB,CAcpB;;AACA,QAAMO,UAAU,GACZD,IAAI,CAACE,MAAL,GAAc,CAAd,GACMF,IAAI,CAACG,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChB,QAAID,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAb,EAAiB;AACb,aAAO,CAAC,CAAR;AACH;AACJ,GAJD,CADN,GAMMN,IAPV;AASA,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CADJ,CAFJ,EAUI,MAAC,SAAD;AAAW,IAAA,UAAU,EAAEC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAcH,CAtCD;;AAwCA,eAAeT,SAAf;AAEA,MAAMe,QAAQ,GAAGvB,MAAM,CAACwB,GAAI;;CAA5B","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport styled from 'styled-components';\n\nimport { getPosts, clearStore } from '../store/actions/postsActions';\nimport { postListDataSelector, createPostSelector } from '../store/selectors';\n\nimport Header from '../components/Common/Header';\nimport Button from '../components/Common/Button';\nimport PostsList from '../components/MainPage/PostsList';\n\nconst IndexPage = () => {\n    const dispatch = useDispatch();\n    const postListData = useSelector((state) => postListDataSelector(state));\n    const createPostData = useSelector((state) => createPostSelector(state));\n    const { sent } = createPostData;\n    console.log('sent: ', sent);\n\n    useEffect(() => {\n        dispatch(getPosts());\n        return () => dispatch(clearStore());\n    }, [sent]);\n\n    const { data } = postListData;\n\n    // Сортируем, новые посты в начале списка\n    const sortedData =\n        data.length > 0\n            ? data.sort((a, b) => {\n                  if (a.id > b.id) {\n                      return -1;\n                  }\n              })\n            : data;\n\n    return (\n        <>\n            <Header />\n            <StyleDiv>\n                <Button primary>\n                    <Link href=\"/posts/new\">\n                        <a>Write post</a>\n                    </Link>\n                </Button>\n            </StyleDiv>\n\n            <PostsList postsArray={sortedData} />\n        </>\n    );\n};\n\nexport default IndexPage;\n\nconst StyleDiv = styled.div`\n    text-align: end;\n`;\n"]},"metadata":{},"sourceType":"module"}