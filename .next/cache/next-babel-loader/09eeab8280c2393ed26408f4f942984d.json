{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pecherkiy/Documents/DevelopsToday/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    color: 'black';\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background: \", \";\\n    color: \", \";\\n    cursor: pointer;\\n    font-size: 1em;\\n    margin: 1em;\\n    padding: 0.25em 1em;\\n    border: 2px solid palevioletred;\\n    border-radius: 3px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { incrementAction, decrementAction } from '../store/actions/counterActions';\n\nvar IndexPage = function IndexPage() {\n  _s2();\n\n  _s();\n\n  var dispatch = useDispatch();\n  var counterValue = useSelector(function (state) {\n    return state.counter;\n  });\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: function onClick() {\n      return dispatch(incrementAction(5));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"PLUS\"), __jsx(Button, {\n    primary: true,\n    onClick: function onClick() {\n      return dispatch(decrementAction(5));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"MINUS\"), __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, counterValue));\n};\n\n_s2(IndexPage, \"HSCQcxh3UujqCGaQy7rhhfRoO3g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c4 = IndexPage;\n\n_s(IndexPage, \"HSCQcxh3UujqCGaQy7rhhfRoO3g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = IndexPage;\nexport default IndexPage;\nvar Button = styled.button(_templateObject(), function (props) {\n  return props.primary ? 'palevioletred' : 'white';\n}, function (props) {\n  return props.primary ? 'white' : 'palevioletred';\n});\n_c2 = Button;\nvar Text = styled.text(_templateObject2());\n_c3 = Text;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IndexPage\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Text\");\n\nvar _c4;\n\n$RefreshReg$(_c4, \"IndexPage\");","map":{"version":3,"sources":["/Users/pecherkiy/Documents/DevelopsToday/pages/index.tsx"],"names":["IndexPage","dispatch","useDispatch","counterValue","useSelector","state","incrementAction","decrementAction","Button","styled","props","Text"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,WAAA,EAAA,WAAA,QAAA,aAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAEA,SAAA,eAAA,EAAA,eAAA,QAAA,iCAAA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,EAAA,EAAA;;AACpB,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,YAAY,GAAGC,WAAW,CAAC,UAAA,KAAA,EAAA;AAAA,WAAWC,KAAK,CAAhB,OAAA;AAAjC,GAAgC,CAAhC;AACA,SACI,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACI,KAAA,CAAA,MAAA,EAAA;AAAQ,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAMJ,QAAQ,CAACK,eAAe,CAA9B,CAA8B,CAAhB,CAAd;AAAjB,KAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EADJ,MACI,CADJ,EAEI,KAAA,CAAA,MAAA,EAAA;AAAQ,IAAA,OAAO,EAAf,IAAA;AAAgB,IAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAML,QAAQ,CAACM,eAAe,CAA9B,CAA8B,CAAhB,CAAd;AAAzB,KAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAFJ,OAEI,CAFJ,EAKI,KAAA,CAAA,IAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EANR,YAMQ,CALJ,CADJ;AAHJ,CAAA;;IAAMP,S;UACeE,W,EACIE,W;;;MAFnBJ,S;;GAAAA,S;UACeE,W,EACIE,W;;;KAFnBJ,S;AAcN,eAAA,SAAA;AAEA,IAAMQ,MAAM,GAAGC,MAAM,CAAT,MAAGA,CAAH,eAAA,EAAGA,EACG,UAAA,KAAA,EAAA;AAAA,SAAYC,KAAK,CAALA,OAAAA,GAAAA,eAAAA,GAAZ,OAAA;AADN,CAAGD,EAEF,UAAA,KAAA,EAAA;AAAA,SAAYC,KAAK,CAALA,OAAAA,GAAAA,OAAAA,GAAZ,eAAA;AAFb,CAAeD,CAAf;MAAMD,M;AAWN,IAAMG,IAAI,GAAGF,MAAM,CAAT,IAAGA,CAAH,gBAAV,EAAaA,CAAb;MAAME,I","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { incrementAction, decrementAction } from '../store/actions/counterActions';\n\nconst IndexPage = () => {\n    const dispatch = useDispatch();\n    const counterValue = useSelector((state) => state.counter);\n    return (\n        <>\n            <Button onClick={() => dispatch(incrementAction(5))}>PLUS</Button>\n            <Button primary onClick={() => dispatch(decrementAction(5))}>\n                MINUS\n            </Button>\n            <Text>{counterValue}</Text>\n        </>\n    );\n};\n\nexport default IndexPage;\n\nconst Button = styled.button`\n    background: ${(props) => (props.primary ? 'palevioletred' : 'white')};\n    color: ${(props) => (props.primary ? 'white' : 'palevioletred')};\n    cursor: pointer;\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid palevioletred;\n    border-radius: 3px;\n`;\n\nconst Text = styled.text`\n    color: 'black';\n`;\n"]},"metadata":{},"sourceType":"module"}